# Customer - 1 => ( Gateway, Virtual Service, Destination Rule)
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway-customer-1
  namespace: spotlight-customer-1
spec:
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - domain1.myapp.com
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: frontend-customer-1
  namespace: spotlight-customer-1
spec:
  host: client-customer-1.spotlight-customer-1.svc.cluster.local
  subsets:
    - name: frontend-customer-1-subset
      labels:
        app: client-customer-1
      trafficPolicy:
        loadBalancer:
          simple: ROUND_ROBIN
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: frontend-customer-1-vs
  namespace: spotlight-customer-1
spec:
  hosts:
    - domain1.myapp.com
  gateways:
    - gateway-customer-1
  http:
    - name: frontend-customer-1
      route:
        - destination:
            host: client-customer-1.spotlight-customer-1.svc.cluster.local
            subset: frontend-customer-1-subset
          weight: 100
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway-server-customer-1
  namespace: spotlight-customer-1
spec:
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - backend1.myapp.com
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: backend-customer-1
  namespace: spotlight-customer-1
spec:
  host: server-customer-1.spotlight-customer-1.svc.cluster.local
  subsets:
    - name: backend-customer-1-subset
      labels:
        app: server-customer-1
      trafficPolicy:
        loadBalancer:
          simple: ROUND_ROBIN
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: backend-customer-1-vs
  namespace: spotlight-customer-1
spec:
  hosts:
    - backend1.myapp.com
  gateways:
    - gateway-server-customer-1
  http:
    - name: backend-customer-1
      route:
        - destination:
            host: server-customer-1.spotlight-customer-1.svc.cluster.local
            subset: backend-customer-1-subset
          weight: 100




# Customer - 2 => ( Gateway, Virtual Service, Destination Rule)
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway-customer-2
  namespace: spotlight-customer-2
spec:
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - domain2.myapp.com
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: frontend-customer-2
  namespace: spotlight-customer-2
spec:
  host: client-customer-2.spotlight-customer-2.svc.cluster.local
  subsets:
    - name: frontend-customer-2-subset
      labels:
        app: client-customer-2
      trafficPolicy:
        loadBalancer:
          simple: ROUND_ROBIN
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: frontend-customer-2-vs
  namespace: spotlight-customer-2
spec:
  hosts:
    - domain2.myapp.com
  gateways:
    - gateway-customer-2
  http:
    - name: frontend-customer-2
      route:
        - destination:
            host: client-customer-2.spotlight-customer-2.svc.cluster.local
            subset: frontend-customer-2-subset
          weight: 100
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway-server-customer-2
  namespace: spotlight-customer-2
spec:
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - backend2.myapp.com
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: backend-customer-2
  namespace: spotlight-customer-2
spec:
  host: server-customer-2.spotlight-customer-2.svc.cluster.local
  subsets:
    - name: backend-customer-2-subset
      labels:
        app: server-customer-2
      trafficPolicy:
        loadBalancer:
          simple: ROUND_ROBIN
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: backend-customer-2-vs
  namespace: spotlight-customer-2
spec:
  hosts:
    - backend2.myapp.com
  gateways:
    - gateway-server-customer-2
  http:
    - name: backend-customer-2
      route:
        - destination:
            host: server-customer-2.spotlight-customer-2.svc.cluster.local
            subset: backend-customer-2-subset
          weight: 100
---
# Extra

# See more at https://istio.io/docs/reference/config/networking/service-entry/
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: cntre.in
spec:
  hosts:
  - cntre.in
  ports:
  - number: 80
    name: http
    protocol: HTTP
  - number: 443
    name: https
    protocol: HTTPS
  resolution: DNS
  location: MESH_EXTERNAL
---

# Deny All => that is one pod cannot contact with other
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deny-all
  namespace: spotlight-customer-1
spec:
  {}
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deny-all
  namespace: spotlight-customer-2
spec:
  {}